[tool:pytest]
# RAGnetic Test Configuration

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 8.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --disable-warnings
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, require services)
    e2e: End-to-end tests (slowest, full system)
    regression: Regression tests (ensure no breaking changes)
    security: Security and penetration tests
    performance: Performance and load tests
    stress: Stress tests (may cause system instability)
    benchmark: Benchmark tests (for performance tracking)
    slow: Slow tests (> 5 seconds)
    gpu: Tests requiring GPU functionality
    external: Tests requiring external services
    
# Async test configuration
asyncio_mode = auto

# Timeout configuration
timeout = 300
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:transformers.*
    ignore::UserWarning:torch.*
    ignore:.*unclosed.*:ResourceWarning

# Environment variables for testing
env = 
    RAGNETIC_ENV = test
    CELERY_TASK_ALWAYS_EAGER = true
    CELERY_TASK_EAGER_PROPAGATES = true
    DISABLE_EXTERNAL_APIS = true
    MOCK_PROVIDERS = true
