"""Migration Fixes?

Revision ID: d1a590d6d0db
Revises: 26ab2021829e
Create Date: 2025-07-19 19:55:59.322438

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd1a590d6d0db'
down_revision: Union[str, Sequence[str], None] = '26ab2021829e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organizations_name'), ['name'], unique=True)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_name'), ['name'], unique=True)

    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permission', name='uq_role_permission')
    )
    op.create_table('user_organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'organization_id', name='uq_user_organization')
    )
    op.create_table('human_tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('assigned_to_user_id', sa.Integer(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('resolution_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['workflow_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('human_tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_human_tasks_run_id'), ['run_id'], unique=False)

    with op.batch_alter_table('agent_run_steps', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('running', 'completed', 'failed', name='agent_status_enum'),
               existing_nullable=False)

    with op.batch_alter_table('agent_runs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('running', 'completed', 'failed', name='agent_status_enum'),
               existing_nullable=False)

    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('running', 'completed', 'failed', 'paused', name='workflow_status_enum'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('running', 'completed', 'failed', 'paused', name='workflow_status_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('agent_runs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('running', 'completed', 'failed', name='agent_status_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('agent_run_steps', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('running', 'completed', 'failed', name='agent_status_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('human_tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_human_tasks_run_id'))

    op.drop_table('human_tasks')
    op.drop_table('user_organizations')
    op.drop_table('role_permissions')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_name'))

    op.drop_table('roles')
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organizations_name'))

    op.drop_table('organizations')
    # ### end Alembic commands ###
