"""Initial Schema

Revision ID: 3683a6f33081
Revises: 
Create Date: 2025-09-07 19:09:30.994426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3683a6f33081'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_agents')),
    sa.UniqueConstraint('name', name=op.f('uq_agents_name'))
    )
    op.create_table('benchmark_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.String(length=255), nullable=False),
    sa.Column('agent_name', sa.String(length=255), nullable=False),
    sa.Column('dataset_id', sa.String(length=255), nullable=True),
    sa.Column('prompt_hash', sa.String(length=64), nullable=True),
    sa.Column('agent_config_hash', sa.String(length=64), nullable=True),
    sa.Column('judge_model', sa.String(length=255), nullable=True),
    sa.Column('config_snapshot', sa.JSON(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('completed_items', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('running', 'completed', 'failed', 'cancelled', name='benchmark_status'), nullable=False),
    sa.Column('summary_metrics', sa.JSON(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_benchmark_runs'))
    )
    with op.batch_alter_table('benchmark_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_benchmark_runs_agent_name'), ['agent_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_benchmark_runs_dataset_id'), ['dataset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_benchmark_runs_run_id'), ['run_id'], unique=True)

    op.create_table('crontab_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('minute', sa.String(length=64), nullable=True),
    sa.Column('hour', sa.String(length=64), nullable=True),
    sa.Column('day_of_week', sa.String(length=64), nullable=True),
    sa.Column('day_of_month', sa.String(length=64), nullable=True),
    sa.Column('month_of_year', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_crontab_schedule'))
    )
    op.create_table('interval_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('every', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=24), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_interval_schedule'))
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizations')),
    sa.UniqueConstraint('name', name=op.f('uq_organizations_name'))
    )
    op.create_table('periodic_task_changed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_periodic_task_changed'))
    )
    op.create_table('ragnetic_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('level', sa.String(length=50), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('module', sa.String(length=255), nullable=True),
    sa.Column('function', sa.String(length=255), nullable=True),
    sa.Column('line', sa.Integer(), nullable=True),
    sa.Column('exc_info', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ragnetic_logs'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('user_id', name=op.f('uq_users_user_id'))
    )
    op.create_table('agent_tools',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('tool_config', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], name=op.f('fk_agent_tools_agent_id_agents'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_agent_tools')),
    sa.UniqueConstraint('agent_id', 'tool_name', name='uq_agent_tool')
    )
    with op.batch_alter_table('agent_tools', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agent_tools_agent_id'), ['agent_id'], unique=False)

    op.create_table('benchmark_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.String(length=255), nullable=False),
    sa.Column('item_index', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('ground_truth_chunk_id', sa.String(length=255), nullable=True),
    sa.Column('retrieved_ids', sa.JSON(), nullable=True),
    sa.Column('retrieval_metrics', sa.JSON(), nullable=True),
    sa.Column('context_size', sa.Integer(), nullable=True),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('judge_scores', sa.JSON(), nullable=True),
    sa.Column('token_usage', sa.JSON(), nullable=True),
    sa.Column('costs', sa.JSON(), nullable=True),
    sa.Column('durations', sa.JSON(), nullable=True),
    sa.Column('citations', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['benchmark_runs.run_id'], name=op.f('fk_benchmark_items_run_id_benchmark_runs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_benchmark_items')),
    sa.UniqueConstraint('run_id', 'item_index', name='uq_bench_item_run_idx')
    )
    with op.batch_alter_table('benchmark_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_benchmark_items_run_id'), ['run_id'], unique=False)

    op.create_table('chat_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_name', sa.String(length=255), nullable=True),
    sa.Column('thread_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_chat_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_sessions')),
    sa.UniqueConstraint('thread_id', name=op.f('uq_chat_sessions_thread_id'))
    )
    with op.batch_alter_table('chat_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_sessions_user_id'), ['user_id'], unique=False)

    op.create_table('fine_tuned_models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('adapter_id', sa.String(length=255), nullable=False),
    sa.Column('job_name', sa.String(length=255), nullable=False),
    sa.Column('base_model_name', sa.String(length=255), nullable=False),
    sa.Column('adapter_path', sa.String(length=512), nullable=False),
    sa.Column('training_dataset_id', sa.String(length=512), nullable=True),
    sa.Column('training_status', sa.Enum('pending', 'running', 'completed', 'failed', 'paused', name='fine_tuning_status_enum'), nullable=False),
    sa.Column('training_logs_path', sa.String(length=512), nullable=True),
    sa.Column('hyperparameters', sa.JSON(), nullable=True),
    sa.Column('final_loss', sa.Float(), nullable=True),
    sa.Column('validation_loss', sa.Float(), nullable=True),
    sa.Column('worker_host', sa.String(length=255), nullable=True),
    sa.Column('worker_pid', sa.Integer(), nullable=True),
    sa.Column('device', sa.String(length=32), nullable=True),
    sa.Column('gpu_name', sa.String(length=255), nullable=True),
    sa.Column('mixed_precision', sa.String(length=16), nullable=True),
    sa.Column('bitsandbytes_4bit', sa.Boolean(), nullable=True),
    sa.Column('seed', sa.Integer(), nullable=True),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('max_steps', sa.Integer(), nullable=True),
    sa.Column('eta_seconds', sa.Float(), nullable=True),
    sa.Column('eval_dataset_id', sa.String(length=512), nullable=True),
    sa.Column('eval_metrics', sa.JSON(), nullable=True),
    sa.Column('best_checkpoint_path', sa.String(length=512), nullable=True),
    sa.Column('gpu_hours_consumed', sa.Float(), nullable=True),
    sa.Column('estimated_training_cost_usd', sa.Float(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name=op.f('fk_fine_tuned_models_created_by_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fine_tuned_models')),
    sa.UniqueConstraint('adapter_id', name=op.f('uq_fine_tuned_models_adapter_id'))
    )
    with op.batch_alter_table('fine_tuned_models', schema=None) as batch_op:
        batch_op.create_index('fine_tuned_models_base_model_idx', ['base_model_name'], unique=False)
        batch_op.create_index('fine_tuned_models_created_at_idx', ['created_at'], unique=False)
        batch_op.create_index('fine_tuned_models_status_idx', ['training_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_fine_tuned_models_created_by_user_id'), ['created_by_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fine_tuned_models_job_name'), ['job_name'], unique=False)

    op.create_table('periodic_task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('task', sa.String(length=255), nullable=True),
    sa.Column('interval_id', sa.Integer(), nullable=True),
    sa.Column('crontab_id', sa.Integer(), nullable=True),
    sa.Column('args', sa.Text(), nullable=True),
    sa.Column('kwargs', sa.Text(), nullable=True),
    sa.Column('queue', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=255), nullable=True),
    sa.Column('routing_key', sa.String(length=255), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('total_run_count', sa.Integer(), nullable=True),
    sa.Column('date_changed', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['crontab_id'], ['crontab_schedule.id'], name=op.f('fk_periodic_task_crontab_id_crontab_schedule')),
    sa.ForeignKeyConstraint(['interval_id'], ['interval_schedule.id'], name=op.f('fk_periodic_task_interval_id_interval_schedule')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_periodic_task')),
    sa.UniqueConstraint('name', name=op.f('uq_periodic_task_name'))
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_permissions_role_id_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_permissions')),
    sa.UniqueConstraint('role_id', 'permission', name='uq_role_permission')
    )
    op.create_table('temporary_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('temp_doc_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('thread_id', sa.String(length=255), nullable=True),
    sa.Column('original_name', sa.Text(), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('cleaned_up', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_temporary_documents_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_temporary_documents')),
    sa.UniqueConstraint('temp_doc_id', name=op.f('uq_temporary_documents_temp_doc_id'))
    )
    with op.batch_alter_table('temporary_documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_temporary_documents_thread_id'), ['thread_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_temporary_documents_user_id'), ['user_id'], unique=False)
        batch_op.create_index('tmp_docs_exp_idx', ['expires_at'], unique=False)

    op.create_table('user_api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('scope', sa.Enum('admin', 'editor', 'viewer', name='api_key_scope_enum'), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('request_count', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_api_keys_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_api_keys')),
    sa.UniqueConstraint('api_key', name=op.f('uq_user_api_keys_api_key'))
    )
    op.create_table('user_organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('fk_user_organizations_organization_id_organizations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_user_organizations_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_organizations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_organizations')),
    sa.UniqueConstraint('user_id', 'organization_id', name='uq_user_organization')
    )
    op.create_table('agent_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.String(length=255), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('parent_run_id', sa.String(length=255), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('running', 'completed', 'failed', name='agent_status_enum'), nullable=False),
    sa.Column('initial_messages', sa.JSON(), nullable=True),
    sa.Column('final_state', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['parent_run_id'], ['agent_runs.run_id'], name=op.f('fk_agent_runs_parent_run_id_agent_runs')),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('fk_agent_runs_session_id_chat_sessions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_agent_runs')),
    sa.UniqueConstraint('run_id', name=op.f('uq_agent_runs_run_id'))
    )
    with op.batch_alter_table('agent_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agent_runs_parent_run_id'), ['parent_run_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_agent_runs_session_id'), ['session_id'], unique=False)

    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.Enum('human', 'ai', name='sender_enum'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('fk_chat_messages_session_id_chat_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_messages'))
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index('chat_messages_session_ts_idx', ['session_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_session_id'), ['session_id'], unique=False)

    op.create_table('conversation_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.String(length=64), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=False),
    sa.Column('completion_tokens', sa.Integer(), nullable=False),
    sa.Column('total_tokens', sa.Integer(), nullable=False),
    sa.Column('retrieval_time_s', sa.Float(precision=10), nullable=True),
    sa.Column('generation_time_s', sa.Float(precision=10), nullable=True),
    sa.Column('estimated_cost_usd', sa.Float(precision=10), nullable=True),
    sa.Column('llm_model', sa.String(length=255), nullable=True),
    sa.Column('embedding_cost_usd', sa.Float(precision=10), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('fine_tuned_model_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['fine_tuned_model_id'], ['fine_tuned_models.adapter_id'], name='fk_conv_metrics_finetuned_adapter', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('fk_conversation_metrics_session_id_chat_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_conversation_metrics')),
    sa.UniqueConstraint('session_id', 'request_id', name='uq_session_request')
    )
    with op.batch_alter_table('conversation_metrics', schema=None) as batch_op:
        batch_op.create_index('conv_metrics_session_ts_idx', ['session_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_metrics_fine_tuned_model_id'), ['fine_tuned_model_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_metrics_request_id'), ['request_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_metrics_session_id'), ['session_id'], unique=False)

    op.create_table('document_chunks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_name', sa.String(length=512), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('row_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('temp_document_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['temp_document_id'], ['temporary_documents.id'], name='fk_document_chunks_temp_document', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_chunks')),
    sa.UniqueConstraint('document_name', 'chunk_index', name='uq_document_chunk')
    )
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_chunks_document_name'), ['document_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_chunks_temp_document_id'), ['temp_document_id'], unique=False)

    op.create_table('lambda_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('initial_request', sa.JSON(), nullable=False),
    sa.Column('final_state', sa.JSON(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('thread_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['thread_id'], ['chat_sessions.thread_id'], name=op.f('fk_lambda_runs_thread_id_chat_sessions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_lambda_runs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lambda_runs')),
    sa.UniqueConstraint('run_id', name=op.f('uq_lambda_runs_run_id'))
    )
    with op.batch_alter_table('lambda_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lambda_runs_thread_id'), ['thread_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lambda_runs_user_id'), ['user_id'], unique=False)

    op.create_table('memory_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('fk_memory_entries_session_id_chat_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_memory_entries')),
    sa.UniqueConstraint('session_id', 'key', name='uq_memory_session_key')
    )
    with op.batch_alter_table('memory_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_memory_entries_session_id'), ['session_id'], unique=False)

    op.create_table('agent_run_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_run_id', sa.Integer(), nullable=False),
    sa.Column('node_name', sa.String(length=255), nullable=False),
    sa.Column('parent_run_id', sa.String(length=255), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('inputs', sa.JSON(), nullable=True),
    sa.Column('outputs', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('running', 'completed', 'failed', name='agent_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['agent_run_id'], ['agent_runs.id'], name=op.f('fk_agent_run_steps_agent_run_id_agent_runs')),
    sa.ForeignKeyConstraint(['parent_run_id'], ['agent_runs.run_id'], name=op.f('fk_agent_run_steps_parent_run_id_agent_runs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_agent_run_steps'))
    )
    with op.batch_alter_table('agent_run_steps', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agent_run_steps_parent_run_id'), ['parent_run_id'], unique=False)

    op.create_table('citations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('marker_text', sa.String(length=255), nullable=False),
    sa.Column('start_char', sa.Integer(), nullable=False),
    sa.Column('end_char', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chunk_id'], ['document_chunks.id'], name=op.f('fk_citations_chunk_id_document_chunks'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], name=op.f('fk_citations_message_id_chat_messages'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_citations'))
    )
    with op.batch_alter_table('citations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_citations_chunk_id'), ['chunk_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_citations_message_id'), ['message_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('citations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_citations_message_id'))
        batch_op.drop_index(batch_op.f('ix_citations_chunk_id'))

    op.drop_table('citations')
    with op.batch_alter_table('agent_run_steps', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agent_run_steps_parent_run_id'))

    op.drop_table('agent_run_steps')
    with op.batch_alter_table('memory_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_memory_entries_session_id'))

    op.drop_table('memory_entries')
    with op.batch_alter_table('lambda_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lambda_runs_user_id'))
        batch_op.drop_index(batch_op.f('ix_lambda_runs_thread_id'))

    op.drop_table('lambda_runs')
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_chunks_temp_document_id'))
        batch_op.drop_index(batch_op.f('ix_document_chunks_document_name'))

    op.drop_table('document_chunks')
    with op.batch_alter_table('conversation_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_metrics_session_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_metrics_request_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_metrics_fine_tuned_model_id'))
        batch_op.drop_index('conv_metrics_session_ts_idx')

    op.drop_table('conversation_metrics')
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_session_id'))
        batch_op.drop_index('chat_messages_session_ts_idx')

    op.drop_table('chat_messages')
    with op.batch_alter_table('agent_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agent_runs_session_id'))
        batch_op.drop_index(batch_op.f('ix_agent_runs_parent_run_id'))

    op.drop_table('agent_runs')
    op.drop_table('user_organizations')
    op.drop_table('user_api_keys')
    with op.batch_alter_table('temporary_documents', schema=None) as batch_op:
        batch_op.drop_index('tmp_docs_exp_idx')
        batch_op.drop_index(batch_op.f('ix_temporary_documents_user_id'))
        batch_op.drop_index(batch_op.f('ix_temporary_documents_thread_id'))

    op.drop_table('temporary_documents')
    op.drop_table('role_permissions')
    op.drop_table('periodic_task')
    with op.batch_alter_table('fine_tuned_models', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fine_tuned_models_job_name'))
        batch_op.drop_index(batch_op.f('ix_fine_tuned_models_created_by_user_id'))
        batch_op.drop_index('fine_tuned_models_status_idx')
        batch_op.drop_index('fine_tuned_models_created_at_idx')
        batch_op.drop_index('fine_tuned_models_base_model_idx')

    op.drop_table('fine_tuned_models')
    with op.batch_alter_table('chat_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_sessions_user_id'))

    op.drop_table('chat_sessions')
    with op.batch_alter_table('benchmark_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_benchmark_items_run_id'))

    op.drop_table('benchmark_items')
    with op.batch_alter_table('agent_tools', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agent_tools_agent_id'))

    op.drop_table('agent_tools')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('ragnetic_logs')
    op.drop_table('periodic_task_changed')
    op.drop_table('organizations')
    op.drop_table('interval_schedule')
    op.drop_table('crontab_schedule')
    with op.batch_alter_table('benchmark_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_benchmark_runs_run_id'))
        batch_op.drop_index(batch_op.f('ix_benchmark_runs_dataset_id'))
        batch_op.drop_index(batch_op.f('ix_benchmark_runs_agent_name'))

    op.drop_table('benchmark_runs')
    op.drop_table('agents')
    # ### end Alembic commands ###
