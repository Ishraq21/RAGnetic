"""New Columns for Fine Tuning Table

Revision ID: d9f0ede42d6e
Revises: 05bd4c248da9
Create Date: 2025-08-26 22:07:28.467010

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd9f0ede42d6e'
down_revision: Union[str, Sequence[str], None] = '05bd4c248da9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('celery_intervalschedule')
    op.drop_table('celery_periodictask')
    op.drop_table('celery_crontabschedule')
    op.drop_table('celery_solarschedule')
    op.drop_table('celery_periodictaskchanged')
    op.drop_table('celery_clockedschedule')
    with op.batch_alter_table('conversation_metrics', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_conv_metrics_finetuned_adapter', 'fine_tuned_models', ['fine_tuned_model_id'], ['adapter_id'], ondelete='SET NULL')

    with op.batch_alter_table('fine_tuned_models', schema=None) as batch_op:
        batch_op.add_column(sa.Column('worker_host', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('worker_pid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('device', sa.String(length=32), nullable=True))
        batch_op.add_column(sa.Column('gpu_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('mixed_precision', sa.String(length=16), nullable=True))
        batch_op.add_column(sa.Column('bitsandbytes_4bit', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('seed', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('current_step', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('max_steps', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('eta_seconds', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('eval_dataset_id', sa.String(length=512), nullable=True))
        batch_op.add_column(sa.Column('eval_metrics', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('best_checkpoint_path', sa.String(length=512), nullable=True))
        batch_op.create_index('fine_tuned_models_created_at_idx', ['created_at'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fine_tuned_models', schema=None) as batch_op:
        batch_op.drop_index('fine_tuned_models_created_at_idx')
        batch_op.drop_column('best_checkpoint_path')
        batch_op.drop_column('eval_metrics')
        batch_op.drop_column('eval_dataset_id')
        batch_op.drop_column('eta_seconds')
        batch_op.drop_column('max_steps')
        batch_op.drop_column('current_step')
        batch_op.drop_column('seed')
        batch_op.drop_column('bitsandbytes_4bit')
        batch_op.drop_column('mixed_precision')
        batch_op.drop_column('gpu_name')
        batch_op.drop_column('device')
        batch_op.drop_column('worker_pid')
        batch_op.drop_column('worker_host')

    with op.batch_alter_table('conversation_metrics', schema=None) as batch_op:
        batch_op.drop_constraint('fk_conv_metrics_finetuned_adapter', type_='foreignkey')

    op.create_table('celery_clockedschedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('clocked_time', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_periodictaskchanged',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('last_update', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_solarschedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('event', sa.VARCHAR(length=17), nullable=False),
    sa.Column('latitude', sa.NUMERIC(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.NUMERIC(precision=9, scale=6), nullable=False),
    sa.CheckConstraint('latitude BETWEEN -90 AND 90'),
    sa.CheckConstraint('longitude BETWEEN -180 AND 180'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event', 'latitude', 'longitude')
    )
    op.create_table('celery_crontabschedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('minute', sa.VARCHAR(length=240), nullable=False),
    sa.Column('hour', sa.VARCHAR(length=96), nullable=False),
    sa.Column('day_of_week', sa.VARCHAR(length=64), nullable=False),
    sa.Column('day_of_month', sa.VARCHAR(length=124), nullable=False),
    sa.Column('month_of_year', sa.VARCHAR(length=64), nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_periodictask',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('task', sa.VARCHAR(length=255), nullable=False),
    sa.Column('args', sa.TEXT(), nullable=False),
    sa.Column('kwargs', sa.TEXT(), nullable=False),
    sa.Column('queue', sa.VARCHAR(length=255), nullable=True),
    sa.Column('exchange', sa.VARCHAR(length=255), nullable=True),
    sa.Column('routing_key', sa.VARCHAR(length=255), nullable=True),
    sa.Column('headers', sa.TEXT(), nullable=True),
    sa.Column('priority', sa.INTEGER(), nullable=True),
    sa.Column('expires', sa.DATETIME(), nullable=True),
    sa.Column('expire_seconds', sa.INTEGER(), nullable=True),
    sa.Column('one_off', sa.BOOLEAN(), nullable=False),
    sa.Column('start_time', sa.DATETIME(), nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), nullable=False),
    sa.Column('last_run_at', sa.DATETIME(), nullable=True),
    sa.Column('total_run_count', sa.INTEGER(), nullable=False),
    sa.Column('date_changed', sa.DATETIME(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('discriminator', sa.VARCHAR(length=20), nullable=False),
    sa.Column('schedule_id', sa.INTEGER(), nullable=False),
    sa.CheckConstraint('priority BETWEEN 0 AND 255'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('celery_intervalschedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('every', sa.INTEGER(), nullable=False),
    sa.Column('period', sa.VARCHAR(length=12), nullable=False),
    sa.CheckConstraint('every >= 1'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
